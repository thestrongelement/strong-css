/**
* @file layout/flow
* @project strong-css
* @author The strong element
*/

/**
* @section Flow
* Layout classes
*/

/**
* Using .flow__flex will make all the immediate children the same height
* Add .flow__flex--col — or shortcut "col--" to child containers to fill the horizontal space
*/

/*
    .flow
    &.flex--
        .flow__box
*/

$box_gutter: $width--ui-padding;

// COLUMNS
%flow {
    @include clearfix;
    margin-bottom: $margin-bottom;
  &:last-child {
        margin-bottom: 0;
  }
    @include screen(m) {
      [class*=flow__box] {
        float: left;
        margin-right: $box_gutter;
        &:last-child {
          margin-right: 0;
        }
        &.center-- {
          //this can only be used when there is a single container
          float: none;
          margin: 0 auto;
        }
        &.reverse-- {
          float: right;
          margin-left: $box_gutter;
          margin-right: 0;
          &:last-child {
            margin-left: 0;
          }
        }
      }
    }
}
.flow, .flow--reverse {
    @extend %flow;
}
//reverse order (right to left)
.flow--reverse {
  @include screen(m) {
    [class*=flow__box] {
      float: right;
      margin-left: $box_gutter;
      margin-right: 0;
      &:last-child {
        margin-left: 0;
      }
    }
  }
}


// FLEX
%flex {
  margin-bottom: $margin-bottom;
  &:last-child {
    margin-bottom: 0;
  }
  display: flex;
  justify-content: space-between;
  flex-direction: column;
  @include screen(m) {
    flex-direction: row;
  }
  .flow__box {
    flex: 1;
    padding: $box_gutter;
  }

}
.flow--flex {
  @extend %flex;
  @include screen(m) {
    //these override order for largescreens (see POS upsell for example)
    .order-1-- {
      order: 1;
    }
    .order-2-- {
      order: 2;
    }
    .order-3-- {
      order: 3;
    }
  }
   &.vcenter-- {
    align-items: center;
  }
}


// FLOW BOXES
//set base column widths for 2-12 cols
//everything stacks under screen(m)


@include screen(m) {

  @for $i from 2 through 12 {
    [class*=flow__box--#{$i}] {
      width:
        calc(
          (100% -
            (#{$box_gutter} * #{$i - 1})
          )/
          #{$i}
        );
      $length: $i - 1;
      @for $k from 1 through $length {
        &.shift-#{$k}-- {
          margin-left:
            calc(
              (
                (100% -
                  (#{$box_gutter} * #{$i - 1})
                )/ #{$i}
              ) *
              #{$k} + (
                #{$box_gutter * $k}
              )
            );

        }
        &.pull-#{$k}-- {
          margin-right:
            calc(
              (
                (100% -
                  (#{$box_gutter} * #{$i - 1})
                )/ #{$i}
              ) *
              #{$k} + (
                #{$box_gutter * $k}
              )
            );
        }
      }
    }
  }
  @for $i from 3 through 12 {
    .flow__box {
      @for $j from 2 through $i {
        &--#{$i}-#{$j} {
          width:
            calc(
              (
                (
                  (100% -
                    (#{$box_gutter} * #{$i - 1})
                  )/
                  #{$i}
                )
                * #{$j}
              )
              +
              (
                #{$box_gutter}*#{$j - 1}
              )
            );
        }
      }
    }
  }

//end screen
}


